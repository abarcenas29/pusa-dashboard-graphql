input inputUser {
  email: String!
  first_name: String!
  last_name: String!
}

type Mutation {
  addUser(user: inputUser, after: String, first: Int, before: String, last: Int): userListConnection
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  user(id: ID!): User
  usersConnection(after: String, first: Int, before: String, last: Int): userConnection
}

type User {
  id: ID!
  email: String!
  first_name: String!
  last_name: String!
}

"""A connection to a list of items."""
type userConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [userEdge]
}

"""An edge in a connection."""
type userEdge {
  """The item at the end of the edge"""
  node: User

  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type userListConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [userListEdge]
}

"""An edge in a connection."""
type userListEdge {
  """The item at the end of the edge"""
  node: User

  """A cursor for use in pagination"""
  cursor: String!
}
